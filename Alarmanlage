//einbinden der Bibliotheken
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SPI.h>
#include <MFRC522.h>
//Pins einen Namen zuweisen
#define SS_PIN 10
#define RST_PIN 9
#define trigger 4
#define echo 5
#define LED1 7
#define LED2 2
#define piezo 6
//Variablendeklaration mit Werten
long dauer = 0;
long entfernung = 0;
long ventfernung = 0;
float sinVal;
int toneVal;
String modus = "AUS";
boolean refresh = true;
boolean alarm = false;
long code = 0;

//Festlegung der Displayart
LiquidCrystal_I2C lcd(0x27, 16, 2);
//Benennung des RFID-Empfängers
MFRC522 mfrc522(SS_PIN, RST_PIN);

void setup() {
  //Serielle Verbindung zum Monitor starten
  Serial.begin(9600);

  //SPI Verbindung aufbauen
  SPI.begin();
  //Initialisierung des RFID-Empfängers
  mfrc522.PCD_Init();

  //LCD Bildschirm wird gestartet
  lcd.init();
  //Hintergrundbeleuchtung wird eingeschaltet
  lcd.backlight();

  //Ein- und Ausgangbelegung der Pins
  pinMode(trigger, OUTPUT);
  pinMode(echo, INPUT);
  pinMode(piezo, OUTPUT);
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
}

void loop() {
  //Wenn der Alarm an ist, dann...
  if (alarm)
  {
    //LED1 und LED2 blinken mit einer Verzögerung von 100ms
    digitalWrite(LED1, HIGH);
    delay(100);
    digitalWrite(LED1 , LOW);
    digitalWrite(LED2, HIGH);
    delay(100);
    digitalWrite(LED2, LOW);
    delay(100);
    //Alarmton wird erzeugt mithilfe einer Sinuskurve
    for (int x=0; x<180; x++) {
      sinVal = (sin(x*(3.1412/180)));
      toneVal = 2000+(int(sinVal*1000));
      tone(piezo, toneVal);
      delay(2);
    }
  }
  //Wenn die Alamanlage eingeschaltet ist...
  if (modus == "AN")
  {
    digitalWrite(trigger, LOW);//Hier nimmt man die Spannung für kurze Zeit vom Trigger-Pin,
    //damit man später beim Senden des Trigger-Signals ein rauschfreies Signal hat.
    delay(5);//Dauer: 5 Millisekunden
    digitalWrite(trigger, HIGH);//Jetzt sendet man eine Ultraschallwelle los.
    delay(10); //Dieser "Ton" erklingt für 10 Millisekunden.
    digitalWrite(trigger, LOW); //Dann wird der "Ton" ausgeschaltet.
    dauer = pulseIn(echo, HIGH); //Mit dem Befehl "pulseIn" zählt der 
    //Mikrokontroller die Zeit in Mikrosekunden, bis der Schall zum Ultraschallsensor zurückkehrt.
    entfernung = (dauer / 2) * 0.03432;//Berechnung der Enfernung in cm mithilfe der Schallgeschwindigkeit.
    
    if (entfernung >= 500 || entfernung <= 0)//Wenn die Entfernung über 500cm oder unter 0cm liegt, ...
    {
      Serial.println("Kein Messwert");//Ausgabe aus dem Monitor
    }
    else
    {
      //Entfernung wird ausgegeben
      Serial.print("Die Entfernung beträgt: ");
      Serial.print(entfernung);
      Serial.println(" cm");
    }

    //Wenn die jetzige Entfernung +-10cm der anfangs Enternung ist, dann... 
    if((entfernung <= ventfernung - 10) || (entfernung >= ventfernung + 10))
    {
      //Der Alarm wird ausgelöst
      alarm = true;
    }
    delay(1000);//Dauer: 1s
  }
  //Wenn das Display neu beschrieben werden soll, dann...
  if (refresh)
  {
    //Alles wird gelöscht
    lcd.clear();
    //setzt den Cursor in Spalte 3, Zeile 1
    lcd.setCursor(2, 0);
    //Anzeige auf dem Display
    lcd.print("Alarmanlage");
    //setzt den Cursor in Spalte 7, Zeile 2
    lcd.setCursor(6, 1);
    //Anzeige des Zustands der Alarmanlage
    lcd.print(modus);
    delay(2000);//Pause: 2s
    refresh = false;//Nachdem das Display aktualisi
  }

  code = 0;//setzt den Code auf null
  //Wenn keine Karte in Reichweite ist...
  if (! mfrc522.PICC_IsNewCardPresent())
  {
    return;//Wird der Code erneut ausgeführt
  }
  //Wenn keine Karte erkannt wurde...
  if (! mfrc522.PICC_ReadCardSerial())
  {
    return;//Wird der Code erneut ausgeführt
  }

  //Rechnet den Code in einen dezimal Code um
  for (byte i = 0; i < mfrc522.uid.size; i++)
  {
    code = ((code + mfrc522.uid.uidByte[i]) * 10);
  }

  //Kartennummer wird ausgegeben
  Serial.print("Die Kartennummer lautet: ");
  Serial.println(code);

  //Wenn die Codes übereinstimmten geht die Alarmanlage an oder aus
  if ((code == 1126320 || code == 2694910) && modus.equals("AN"))
  {
    modus = "AUS";//Schaltet die Alarmanlage aus
    alarm = false;//Alarm wird ausgeschaltet
    refresh = true;//Das Display zeigt "Aus" an
    noTone(piezo);//der Ton geht aus
  }
  else if ((code == 1126320 || code == 2694910) && modus.equals("AUS"))
  {
    modus = "AN";//Schaltet die Alarmanlage an
    //Countdown von 5 Sekunden bis die Alarmanlage an geht
    for(int i = 5; i > 0; i--)
    {
      delay(1000);
      lcd.clear();
      lcd.setCursor(2, 0);
      lcd.print("Alarmanlage");
      lcd.setCursor(6, 1);
      lcd.print(i);
    }
    //Startet den Ultraschallsensor
    digitalWrite(trigger, LOW);
    delay(5);
    digitalWrite(trigger, HIGH);
    delay(10);
    digitalWrite(trigger, LOW);
    dauer = pulseIn(echo, HIGH);//Dauer bis der Schall zurückkehrt in Millisekunden
    entfernung = (dauer / 2) * 0.03432;//Berechnung der Zeit in cm
    ventfernung = entfernung;//Anfangsentfernung
    refresh = true;//Das Display wird erneuert
  }
  //Wenn keiner der Codes übereinstimmt, dann...
  else if (!(code == 1126320 || code == 2694910) && (modus.equals("AUS") || modus.equals("AN")))
  {
    lcd.clear();//Das Display wird gelöscht
    lcd.setCursor(2, 0);//setzt den Cursor in Spalte 3, Zeile 1
    lcd.print("Alarmanlage");//schreibt Alarmanlage auf das Display
    lcd.setCursor(3, 1);//setzt den Cursor in Spalte 4, Zeile 2
    lcd.print("Fehler!!");//schreibt "Fehler" auf das Display
    delay(1000);//"Fehler!" wird für 1s angezeigt
    refresh = true;//das Display wird in den Anfangszustand zurück versetzt   
  }
}
